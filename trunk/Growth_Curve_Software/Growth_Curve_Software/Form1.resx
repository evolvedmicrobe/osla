<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>247, 17</value>
  </metadata>
  <metadata name="NextInstructionTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>363, 17</value>
  </metadata>
  <metadata name="serviceController1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>529, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>679, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>78</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAAAAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABIAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAA4ODgAPDw8ADQ0NAA6OjoANjY2AAQEBAA+Pj4AP///wDIyMgA//DQAODY2AC4uLgA2NDQAMDA
        wAAgICAAKCgoALCwsAAwMDAAGBgYAKCgoABAQEAASEhIAJCQkABQUFAAcHBwADg4OABgYGAAgICAAKhg
        AACoqKgA6PDwAJiYmAB4eHgAsGAAAGhoaAAQAAAAiIiIAODQ0ABYWFgA0NjYANCQYADY2NAA0NDIAODY
        0ADg6OgAsGgAAOCwgADgsIgAoGAAALBoKADQoHAAyJBYALhwOADQmGgA8NCgAPDAkACwYBAA/+C4AOi4
        kACwsKgAiIiQAODw8ADAgEgAEBAAAKhoAACQgIAAqGAYAKCQiAAAEBgAwHBAAP/oyAC4sLAA2ODgABgY
        EACoYBAAuIhgAGBgaACYgGgAuHAwANCQaADAkFAA0LCYAKCYmADo4OAAoHhYAMCISADAeEAAsHAoAKho
        GACwYCAAkIiIAMCAQADo6PAAAAAQAJCIeACosLAAoGAQAKh4UADwyKAAICAYAPjYqADwyJgAWEhAAJB4
        YACwmIgA2Kh4AEAwKAB4cHAAyKiIAMCYeAC4uMAAgHh4AFhQUADAwMgAqKigAFAoGACQeHAAoGAoAJCQ
        mACAcGAAoGAgALhoAADAuLAAoFAQAHhwYACwkHAAkHBIAEBAOABQUEgAyMjAANCYYABwaGgAYFBAAODg
        6ADgwKAAmFgAALhwIAAwMCgAsHAwALCwuACgaCgAmGhIALBwOACgaDgAyLCYAJCgoAC4cEAAmIiAAKCQ
        cADgsJAAGBAQAJhwWABoYGAA0KiIAKCgqADguJgA8NCwAIBwWACQcFgA2Mi4APjQoADQmHAAwIhgANCg
        gAC4kHAAwMC4AKiosADI0NAAwMjIAJiYoAB4aFAAEBgoAJiAcACwkIAAaFBIAHBYSACQgGgAKCAgAKBY
        AACImKAA2MCgAMDI0ACAWDAAmKCgAKBgGACQWCAAmJioAMC4uACQSCAAsKCQALBoIACoeEAAwJBoALiA
        WADAuKAAuHAYAKh4WACooJAAmHhgAJhgOADIeEgAgICQACAYGAB4aFgAyJhwALiggACwcEAAsHAAAICQ
        oAAQGBgAeFhAAODo8ACocEAAyIhQAIiQkABoWFAAqIhwAFA4MABAKCAAkHBQALiASABwcGAAUEA4AJhw
        SACgaBgAuIBgAFBAQACgoLAAqLjAAKiYgACgiGgAsLCgAIhYGACoaDAA4ODwANigcACocDAAaHB4AFBg
        YAAYICAAyMjQAKhoKADAmHAA6OjgAP/owACwaBgAoGgwAHBwaACYgFgAwHgoALiQYABoaHAAqIBwALBg
        GAC4eDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAABAWIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAYSFhsAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQkAAAAAAATDxobAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAYQFiMAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjXyziH+fTqtKAAAAAAAAAAAAAAAA
        ExIYGSEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATEsuHTIAAAAAFQAABgAAAAAA
        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
        EBgcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAAAA
        AAYGDw8nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ
        AAYAAAAAABMQIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAGQAAAAAAAAAADxkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAQAAAAAAAAABocAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAPQAAAAAABgYYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAAAAAGIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAADyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAABolAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhBgAAHAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUADwAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlBhYAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYjAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////////////z//////////A//////
        ///+Af////////4AP////////wAD//////+AAAAf/////weAAAD/////g4AAAAD////AwAAAAAAP/+Bg
        AAAAAA//8AAAAAAAD//8AAAAAAAP//4AAAAAAA///8AAAAAAD///8AAAAAAf///8AAAAAB//4D4AAAAA
        H//g/gAAAAAf/+B/AAAAAB//8B+AAAAAH//4D4AAAAAf//wHwAAAAD///wHAAAAAAf//gGAAAAAAf//w
        AAAAAAAf//4AAAAAAA/8H4AAAAAAD/A/4AAAAAAH8H/8AAAAAAf4P/wAAAAAA/gP/gAAAAAD/gf/AAAA
        AAP/Af8AAAAAA//Af4AAAAAD/+AfgAAAAAP//AfAAAAAA///AcAAAAAD///gYAAAAAf///wAAAAAB///
        /4AAAAAP////+AAAAA/////4AAAAH/////wAAgB//////AADgf/////+AAP///////8AB////////wAP
        ////////gA////////+AD////////8AP////////wB/////////gH/////////Af////////8B//////
        ///4P/////////g//////////H/////////8f/////////5/////////////////////////
</value>
  </data>
</root>