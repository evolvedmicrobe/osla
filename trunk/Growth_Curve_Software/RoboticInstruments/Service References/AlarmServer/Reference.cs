//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Growth_Curve_Software.AlarmServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstrumentStatus", Namespace="http://schemas.datacontract.org/2004/07/Robot_Alarm")]
    [System.SerializableAttribute()]
    public partial class InstrumentStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string StatusField;
        
        private System.DateTime TimeCreatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime TimeCreated {
            get {
                return this.TimeCreatedField;
            }
            set {
                if ((this.TimeCreatedField.Equals(value) != true)) {
                    this.TimeCreatedField = value;
                    this.RaisePropertyChanged("TimeCreated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmState", Namespace="http://schemas.datacontract.org/2004/07/Robot_Alarm")]
    [System.SerializableAttribute()]
    public partial class AlarmState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool AlarmOnField;
        
        private System.DateTime TimeTurnedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool AlarmOn {
            get {
                return this.AlarmOnField;
            }
            set {
                if ((this.AlarmOnField.Equals(value) != true)) {
                    this.AlarmOnField = value;
                    this.RaisePropertyChanged("AlarmOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime TimeTurnedOn {
            get {
                return this.TimeTurnedOnField;
            }
            set {
                if ((this.TimeTurnedOnField.Equals(value) != true)) {
                    this.TimeTurnedOnField = value;
                    this.RaisePropertyChanged("TimeTurnedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="AlarmServer.IAlarm")]
    public interface IAlarm {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetInstrumentStatus", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetInstrumentStatusResponse")]
        Growth_Curve_Software.AlarmServer.InstrumentStatus GetInstrumentStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetAlarmStatus", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetAlarmStatusResponse")]
        Growth_Curve_Software.AlarmServer.AlarmState GetAlarmStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/TurnOnAlarm", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/TurnOnAlarmResponse")]
        void TurnOnAlarm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/TurnOffAlarm", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/TurnOffAlarmResponse")]
        void TurnOffAlarm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/UpdateStatus", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/UpdateStatusResponse")]
        void UpdateStatus(string Status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetCameraImage1", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetCameraImage1Response")]
        System.Drawing.Bitmap GetCameraImage1(out string UpdateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetCameraImage2", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetCameraImage2Response")]
        System.Drawing.Bitmap GetCameraImage2(out string UpdateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/SetCameraImage1", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/SetCameraImage1Response")]
        void SetCameraImage1(System.Drawing.Bitmap Image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/SetCameraImage2", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/SetCameraImage2Response")]
        void SetCameraImage2(System.Drawing.Bitmap Image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/ReturnJPEGCamera1", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/ReturnJPEGCamera1Response")]
        byte[] ReturnJPEGCamera1(out string updateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/ReturnJPEGCamera2", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/ReturnJPEGCamera2Response")]
        byte[] ReturnJPEGCamera2(out string updateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetImageHeight", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetImageHeightResponse")]
        int GetImageHeight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetImageWidth", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetImageWidthResponse")]
        int GetImageWidth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetCurrentlyLoadedProtocolNames", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetCurrentlyLoadedProtocolNamesRespo" +
            "nse")]
        System.Collections.Generic.List<string> GetCurrentlyLoadedProtocolNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/SetCurrentlyLoadedProtocolNames", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/SetCurrentlyLoadedProtocolNamesRespo" +
            "nse")]
        void SetCurrentlyLoadedProtocolNames(System.Collections.Generic.List<string> Names);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/UpdateOperation", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/UpdateOperationResponse")]
        void UpdateOperation(string Operation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetOperation", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetOperationResponse")]
        string GetOperation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/ValidateProtocol", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/ValidateProtocolResponse")]
        void ValidateProtocol(string protocolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/GetValidationTimeOfProtocol", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/GetValidationTimeOfProtocolResponse")]
        System.DateTime GetValidationTimeOfProtocol(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/TestNumbers", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/TestNumbersResponse")]
        bool TestNumbers(string numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/CallConnects", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/CallConnectsResponse")]
        bool CallConnects(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/isVerified", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/isVerifiedResponse")]
        bool isVerified(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IAlarm/addToVerified", ReplyAction="http://Microsoft.ServiceModel.Samples/IAlarm/addToVerifiedResponse")]
        void addToVerified(string number);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmChannel : Growth_Curve_Software.AlarmServer.IAlarm, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmClient : System.ServiceModel.ClientBase<Growth_Curve_Software.AlarmServer.IAlarm>, Growth_Curve_Software.AlarmServer.IAlarm {
        
        public AlarmClient() {
        }
        
        public AlarmClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Growth_Curve_Software.AlarmServer.InstrumentStatus GetInstrumentStatus() {
            return base.Channel.GetInstrumentStatus();
        }
        
        public Growth_Curve_Software.AlarmServer.AlarmState GetAlarmStatus() {
            return base.Channel.GetAlarmStatus();
        }
        
        public void TurnOnAlarm() {
            base.Channel.TurnOnAlarm();
        }
        
        public void TurnOffAlarm() {
            base.Channel.TurnOffAlarm();
        }
        
        public void UpdateStatus(string Status) {
            base.Channel.UpdateStatus(Status);
        }
        
        public System.Drawing.Bitmap GetCameraImage1(out string UpdateTime) {
            return base.Channel.GetCameraImage1(out UpdateTime);
        }
        
        public System.Drawing.Bitmap GetCameraImage2(out string UpdateTime) {
            return base.Channel.GetCameraImage2(out UpdateTime);
        }
        
        public void SetCameraImage1(System.Drawing.Bitmap Image) {
            base.Channel.SetCameraImage1(Image);
        }
        
        public void SetCameraImage2(System.Drawing.Bitmap Image) {
            base.Channel.SetCameraImage2(Image);
        }
        
        public byte[] ReturnJPEGCamera1(out string updateTime) {
            return base.Channel.ReturnJPEGCamera1(out updateTime);
        }
        
        public byte[] ReturnJPEGCamera2(out string updateTime) {
            return base.Channel.ReturnJPEGCamera2(out updateTime);
        }
        
        public int GetImageHeight() {
            return base.Channel.GetImageHeight();
        }
        
        public int GetImageWidth() {
            return base.Channel.GetImageWidth();
        }
        
        public System.Collections.Generic.List<string> GetCurrentlyLoadedProtocolNames() {
            return base.Channel.GetCurrentlyLoadedProtocolNames();
        }
        
        public void SetCurrentlyLoadedProtocolNames(System.Collections.Generic.List<string> Names) {
            base.Channel.SetCurrentlyLoadedProtocolNames(Names);
        }
        
        public void UpdateOperation(string Operation) {
            base.Channel.UpdateOperation(Operation);
        }
        
        public string GetOperation() {
            return base.Channel.GetOperation();
        }
        
        public void ValidateProtocol(string protocolName) {
            base.Channel.ValidateProtocol(protocolName);
        }
        
        public System.DateTime GetValidationTimeOfProtocol(string name) {
            return base.Channel.GetValidationTimeOfProtocol(name);
        }
        
        public bool TestNumbers(string numbers) {
            return base.Channel.TestNumbers(numbers);
        }
        
        public bool CallConnects(string number) {
            return base.Channel.CallConnects(number);
        }
        
        public bool isVerified(string number) {
            return base.Channel.isVerified(number);
        }
        
        public void addToVerified(string number) {
            base.Channel.addToVerified(number);
        }
    }
}
